<UserControl x:Class="NoobSwarm.WPF.View.RecordingControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:NoobSwarm.WPF.View"
             mc:Ignorable="d" 
             DataContext="{Binding Source={StaticResource Locator}, Path=RecordingViewModel}"
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>

        <local:RecordKeysControl Grid.Column="0"
                                 Grid.Row="0"
                                 Margin="10"
                                 BlockInput="{Binding BlockInput}" 
                                 StartRecordingText="Click to record HotKeys" 
                                 StopRecordingText="Recording HotKeys.."
                                 RecordedKeys="{Binding HotkeyRecordedKeys}"
                                 ClearCommand="{Binding HotkeyClearCommand, Mode=TwoWay}">
            <behaviors:Interaction.Triggers>
                <behaviors:EventTrigger EventName="RecordingCleared">
                    <behaviors:InvokeCommandAction Command="{Binding HotkeyRecordingClearedCommand}"/>
                </behaviors:EventTrigger>

                <behaviors:EventTrigger EventName="RecordingStarted">
                    <behaviors:InvokeCommandAction Command="{Binding HotkeyRecordingStartedCommand}"/>
                </behaviors:EventTrigger>

                <behaviors:EventTrigger EventName="RecordingStopped">
                    <behaviors:InvokeCommandAction Command="{Binding HotkeyRecordingStoppedCommand}" PassEventArgsToCommand="True"/>
                </behaviors:EventTrigger>

                <behaviors:EventTrigger EventName="KeyRecorded">
                    <behaviors:InvokeCommandAction Command="{Binding HotkeyKeyRecordedCommand}" PassEventArgsToCommand="True"/>
                </behaviors:EventTrigger>
            </behaviors:Interaction.Triggers>
        </local:RecordKeysControl>


        <local:RecordKeysControl Grid.Column="1"
                                 Grid.Row="0"
                                 Margin="10"
                                 BlockInput="{Binding BlockInput}" 
                                 StartRecordingText="Click to record Makro Keys" 
                                 StopRecordingText="Recording makro Keys.."
                                 RecordedKeys="{Binding MakroRecordedKeys}"
                                 IsEnabled="{Binding HotkeyCommandEnabled}"
                                 ClearCommand="{Binding MakroClearCommand, Mode=TwoWay}"
                                 PrintMode="Full">
            <behaviors:Interaction.Triggers>
                <behaviors:EventTrigger EventName="RecordingCleared">
                    <behaviors:InvokeCommandAction Command="{Binding MakroRecordingClearedCommand}"/>
                </behaviors:EventTrigger>

                <behaviors:EventTrigger EventName="RecordingStarted">
                    <behaviors:InvokeCommandAction Command="{Binding MakroRecordingStartedCommand}"/>
                </behaviors:EventTrigger>

                <behaviors:EventTrigger EventName="RecordingStopped">
                    <behaviors:InvokeCommandAction Command="{Binding MakroRecordingStoppedCommand}" PassEventArgsToCommand="True"/>
                </behaviors:EventTrigger>

                <behaviors:EventTrigger EventName="KeyRecorded">
                    <behaviors:InvokeCommandAction Command="{Binding MakroKeyRecordedCommand}" PassEventArgsToCommand="True"/>
                </behaviors:EventTrigger>
            </behaviors:Interaction.Triggers>
        </local:RecordKeysControl>

        <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="99">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Block Input during Recording" 
                           VerticalAlignment="Center" 
                           Margin="10,0,16,0"
                           Style="{StaticResource MaterialDesignTextBlock}"/>
                <ToggleButton  VerticalAlignment="Center" IsChecked="{Binding BlockInput}"/>
            </StackPanel>


            <StackPanel Grid.Column="0" Grid.ColumnSpan="99" HorizontalAlignment="Center"  Orientation="Horizontal">

                <Button />

                <Button 
                    Style="{StaticResource MaterialDesignRaisedButton}"
                    Content="{materialDesign:PackIcon Kind=Clipboard,Size=36}"
                    Width="64" Height="48"
                    Margin="10"
                    Command="{Binding AddHotkeyAsClipboardCommand}"
                    IsEnabled="{Binding HotkeyCommandEnabled}" />

                <Button 
                    Style="{StaticResource MaterialDesignRaisedButton}"
                    Content="{materialDesign:PackIcon Kind=OpenInApp,Size=36}"
                    Width="64" Height="48"
                    Margin="10"
                    Command="{Binding AddHotkeyAsOpenProgrammCommand}"
                    IsEnabled="{Binding HotkeyCommandEnabled}" />

                <Button 
                    Style="{StaticResource MaterialDesignRaisedButton}"
                    Content="{materialDesign:PackIcon Kind=MicrosoftInternetExplorer,Size=36}"
                    Width="64" Height="48"
                    Margin="10"
                    Command="{Binding AddHotkeyAsURLCommand}"
                    IsEnabled="{Binding HotkeyCommandEnabled}" />

                <Button Content="{materialDesign:PackIcon Kind=TrashCan}" Command="{Binding ClearCommand}"/>
            </StackPanel>

            <Button
                Grid.Column="2"
                Style="{StaticResource MaterialDesignFloatingActionAccentButton}"
                ToolTip="Save"
                Command="{Binding SaveCommand}"
                Content="{materialDesign:PackIcon Kind=Plus, Size=36}" HorizontalAlignment="Right"  Margin="0 -10 20 0"/>
        </Grid>
    </Grid>
</UserControl>
